---
layout: post
title:  "LACMTA Service Request Tracking System"
date:   2018-04-18 15:39:40
preview: /img/metro/logo.jpg

---
<br>
**CLIENT** <br>
[The Los Angeles County Metropolitan Transportation Authority - LACMTA](https://www.metro.net/){:target="_blank"} branded as Metro, is the county agency that plans, operates, and coordinates funding for most of the public transportation system in Los Angeles County, California.  <br>
<br>
The final product is an internal system hence no access to the public.

<br><br>

| My Roles            | Duration | Tools/Tech    |
| ------------------- | -------- | ------------- |
| UI/UX Designer      | 4 months | Figma         |


<br>

**BUSINESS GOALS** <br>
LACMTA is seeking to revamp its existing service request tracking system by transitioning to a new website that embodies a contemporary aesthetic and user experience, all while harnessing the power of AWS, moving away from their on-premises system. We aim to incorporate user-friendly and interactive features and ensure that the application is scalable.
<br>
The entire software development process adheres to Agile methodologies, incorporating Scrum and sprint practices and periodic refinement sessions with the client.
<br>

**PAIN POINT** <br>
LACMTA is currently using and maintaining two separate systems; one is Ivanti - used to create service requests, and their STRS system - used to approve, track and update service request initiated from Ivanti. This is both inconvenient and costly in terms of time and labor. 
<br>

**SOLUTION** <br>
By combining the two systems, we improve the efficiency of the whole workflow as well as the security, reliability, cost optimization, and sustainability. The entire software development process adheres to Agile methodologies, incorporating Scrum and sprint practices and periodic refinement sessions with the client.
<br>

Some key features of the system:
1. UAM
   * Roles & Permissions: Super user/ Admin, Executive Officer (OE), Supervisor, Delivery Manager (DM), Delivery Lead (DL), Technician
   * User Profile

2. Service Request (SR) Management
   * Create, Read, Update SRs
   * View SR Details
   * SR Activity Log
   * SR Approval Flow

3. Reports/dashboard
   * SRs by status/ user/ timeframe. Hightlight overdue SR
   * KPI/ Performance tracking 

<br>

| Login - intergrate with Azure ID                                                                                             |
| ------------------------------------------------------------------------------------------------------|
| <img src="/img/metro/qa-srts-nettricity-cloud-identity-login.png" alt="login" title="log-in-screen" height="380" />                       |

| Dashboard - track KPI by cost center and monitor overdue Service Requests                                       |
| ------------------------------------------------------------------------------------------------------|
| <img src="/img/metro/dashboard.png" title="dashboard" height="380" />                       |

| Create Service Request                                        |
| ------------------------------------------------------------------------------------------------------|
| <img src="/img/metro/sr.png" title="create-service-request" height="400" />                       |

| Service Request Details - approve/reject, assign to worker, update SR info                                     |
| ------------------------------------------------------------------------------------------------------|
| <img src="/img/metro/sr-detail.png" title="service-request-detail" height="400" />                       |

| Roles & Permissions - offer role-based access control                                     |
| ------------------------------------------------------------------------------------------------------|
| <img src="/img/metro/role.png" title="create-service-request" height="400" />                       |
<br>
